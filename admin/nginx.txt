1. создать конфиг
2. подключить конфиг

cd /etc/nginx/sites-enabled/
ln -s /etc/nginx/sites-available/example.com

3. Дать права на папки статики

перезапуск сервера



sudo aptitude install nginx

sudo service nginx start
sudo service nginx reload


nginx -v


каталог nginx

cd /etc/nginx/
ls -la 

sudo nano /etc/nginx/sites-available/gaz-lift.com





Рекомендую удалять командой sudo apt-get purge nginx или sudo apt purge nginx. 
Если вы используете пакетный менеджер aptitude, то команда sudo aptitude purge nginx удаляет пакет полностью со всеми зависимостями и конфигурационными файлами.


После сохранения надо создать указанный каталог и дать пользователю www-data (по умолчанию) к нему доступ:

mkdir /home/www
mkdir /home/www/files
chown www-data /home/www
chown www-data /home/www/files
Пользователь, под которым работает nginx, указывается в первой строке конфигурационного 
файла (user www-data;).


chown www-data /var/www/wh3.dev-base.ru
chown www-data /var/www/wh3.dev-base.ru/static
chown www-data /var/www/wh3.dev-base.ru/static/files


Настройка с нодой 

https://linode.com/docs/development/nodejs/how-to-install-nodejs-and-nginx-on-debian/


Проксирование в папку статик
https://kuroikaze85.wordpress.com/2010/01/19/using-nginx-with-node-js/



// Server nginx + nodejs (static!!!)

#Names a server and declares the listening port
server {
    listen 80;
    server_name gaz-lift.com www.gaz-lift.com;

    #Configures the publicly served root directory
    #Configures the index file to be served
    # root /var/www/gaz-lift.com/static;
    # index index.html index.htm;
    location ^~ /static/ {
        # Путь к корневому каталогу со статическими файлами
        root /var/www/gaz-lift.com/static;
    }

    #These lines create a bypass for certain pathnames
    #www.example.com/test.js is now routed to port 3000
    #instead of port 80
    location / {
        proxy_pass http://95.213.194.214:8000;
        proxy_set_header Host $host;
    }
}
